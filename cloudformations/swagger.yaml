swagger: "2.0"
info:
  version: "1.0.0"
  title:
    Fn::Sub: ${Environment}-DynamoApi
  description: "Example of Api"
schemes:
  - "https"
x-amazon-apigateway-documentation:
  version: 0.1
  documentationParts:
    - location:
        type: API
      properties:
        description: Open Api 
        info:
          description: Servicio gen√©rico para ser invocado desde el FE
          version: 0.1

# paths:
#   /dynamo:
#     get:
#       tags:
#         - Get Dynamo Table
#       summary: Get Dynamo Table
#       description: Get Dynamo Table
#       operationId: dynamoGet
#       produces:
#         - application/json
#       parameters:
#         - in: query
#           name: userId
#           type: string
#           required: true
#           description: id of user
#           name: tableName
#           type: string
#           required: true
#           description: name of the table
#       x-amazon-apigateway-request-validator: "Validate-Params"
#       x-amazon-apigateway-integration:
#         uri:
#           Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DynamoGetApiFunction.Arn}/invocations"
#         passthroughBehavior: "when_no_match"
#         httpMethod: POST
#         type: aws_proxy
#       responses:
#         '200':
#           description: Respuesta Ok
#           schema:
#             $ref: "#/definitions/SchemaDynamoGetOk"
#         '500':
#           description: Error
#           schema:
#             $ref: "#/definitions/Error"
#     options:
#       tags:
#         - Dynamo Get
#       consumes:
#         - application/json
#       produces:
#         - application/json
#       responses:
#         '200':
#           description: 200 response
#           headers:
#             Access-Control-Allow-Origin:
#               type: string
#             Access-Control-Allow-Methods:
#               type: string
#             Access-Control-Allow-Headers:
#               type: string
#       x-amazon-apigateway-integration:
#         responses:
#           default:
#             statusCode: '200'
#             responseParameters:
#               method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
#               method.response.header.Access-Control-Allow-Headers: "'*'"
#               method.response.header.Access-Control-Allow-Origin: "'*'"
#             responseTemplates:
#               application/json: "{}\n"
#         passthroughBehavior: when_no_match
#         requestTemplates:
#           application/json: "{\n  \"statusCode\" : 200\n}\n"
# definitions:
#   SchemaDynamoGetOk:
#     type: object
#     properties:
#       Contenido:
#         type: string
#   Error:
#     type: object
#     required:
#       - code
#       - message
#     properties:
#       code:
#         type: number
#       message:
#         type: string

# x-amazon-apigateway-request-validators:
#   Validate-Body:
#     validateRequestParameters: false
#     validateRequestBody: true
#   Validate-Params:
#     validateRequestParameters: true
#     validateRequestBody: false
